<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:util="http://www.springframework.org/schema/util" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
						   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
						   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						   http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<util:properties id="cfgproperties" location="classpath:cfg.properties" />

	<bean id="authenticationHolder" class="it.disim.univaq.alexanderperucci.services.reds.common.spring.security.AuthenticationHolder" />

	<bean scope="request" factory-bean="authenticationHolder" factory-method="getUser">
		<aop:scoped-proxy />
	</bean>
	
	<bean id="MyWebBindingInitializer" class="it.disim.univaq.alexanderperucci.services.reds.common.spring.configuration.MyWebBindingInitializer" />

	<bean class="it.disim.univaq.alexanderperucci.services.reds.common.spring.configuration.MVCConfigurationPostProcessor">
		<property name="webBindingInitializer" ref="MyWebBindingInitializer" />
	</bean>
	
	
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="false" />
		<property name="favorParameter" value="false" />
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes">
			<value>
				atom=application/atom+xml
				html=text/html
				json=application/json
				*=*/*
			</value>
		</property>
	</bean>
	
	<!-- ================= MISC. ================= -->
	<!-- Message properties -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="fallbackToSystemLocale" value="false" />
		<property name="basenames">
			<list>
				<value>classpath:/i18n/common</value>
				<value>classpath:/i18n/redsmanager</value>
			</list>
		</property>
	</bean>

	<!-- Declare the Interceptor -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>

	<!-- Declare the Resolver -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

	<mvc:view-controller path="/" view-name="common.login" />
	<mvc:view-controller path="/login" view-name="common.login" />
	<mvc:view-controller path="/common/welcome" view-name="common.welcome" />
	<mvc:view-controller path="/okregistration" view-name="common.okregistration" />
	<mvc:view-controller path="/common/notfound" view-name="common.notfound" />  
    
   
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- ================= TILES ================= -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/spring/tiles-defs.xml</value>
			</list>
		</property>
	</bean>
	<!-- <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" /> -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>
	
	<websocket:message-broker application-destination-prefix="/app">
		<websocket:stomp-endpoint path="/redsmanager">
			<websocket:sockjs/>
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/queue, /topic"/>
	</websocket:message-broker>
	
	<context:component-scan base-package="it.disim.univaq.alexanderperucci.services.reds.presentation" />
</beans>